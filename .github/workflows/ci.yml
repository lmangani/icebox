name: CI

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]
  workflow_dispatch:

env:
  GO_VERSION: "1.24"

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ["1.24"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Run tests
        run: go test -v -race ./...

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Build binary
        run: go build -v -o ./bin/icebox${{ matrix.os == 'windows-latest' && '.exe' || '' }} ./cmd/icebox

      - name: Test binary execution
        run: ./bin/icebox${{ matrix.os == 'windows-latest' && '.exe' || '' }} --help

      - name: Upload binary artifacts
        uses: actions/upload-artifact@v4
        with:
          name: icebox-${{ runner.os }}-${{ runner.arch }}
          path: ./bin/icebox${{ matrix.os == 'windows-latest' && '.exe' || '' }}
          retention-days: 7

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [test, build]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Run integration tests
        run: go test -v ./integration_tests/...
        env:
          ICEBOX_INTEGRATION_TESTS: "true"

  validate:
    name: Validate
    runs-on: ubuntu-latest
    needs: [test, build, integration-test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Validate go.mod and go.sum
        run: |
          go mod tidy
          git diff --exit-code go.mod go.sum

      - name: Check for uncommitted changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "There are uncommitted changes:"
            git status --porcelain
            exit 1
          fi
